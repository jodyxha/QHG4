#!/bin/bash
APP="../app/"
POPULATIONS="../populations/"
UTILS="../utils/"

FACTORY_SRC="StatPopFactory.cpp_template"
REVISION_H="../utils/svn_revision.h"

if  [ X${SHORT} == X1 ]
then
    POPULATIONS="../short_pop/"
else
    if  [ X${SHORT} != X ]
    then
        POPULATIONS="../${SHORT}_pop/"
    fi
fi
echo "pop: [${POPULATIONS}]"

INCLUDE_STRING="\n"
FACTORY_STRING="\n"
SUMMARY_STRING=""

for popheader in `ls ${POPULATIONS}*Pop.h`; do

    # find name of population class in header file

    CLASSNAME=`awk '{ if (($1 == "class") && ($4 == "public")) { print $2;} }' ${popheader}`
    CLASSNAME=${CLASSNAME%"public"} # remove trailing : just in case
    CLASSNAME=${CLASSNAME%":"} # remove trailing : just in case

    # add the include file to the ncludes string
    INCLUDE_STRING=${INCLUDE_STRING}'#include "'${popheader}'"\n'

    # add the else-if branch for the creation of this class
    FACTORY_STRING=${FACTORY_STRING}'        } else if (sClassName == "'${CLASSNAME}'") {\n'\
'            if (bVerbose) { printf("PopulationFactory is creating '${CLASSNAME}'\\n"); }\n'\
'            pPop = new '${CLASSNAME}'(m_pCG,m_pPopFinder,m_iLayerSize,m_apIDG,m_aulState,m_aiSeeds);\n'


#    SUMMARY_STRING=${SUMMARY_STRING}'CLASS '${CLASSNAME}' : ClassID '${POPCOUNT}$'\n'

    POPCOUNT=`expr $POPCOUNT + 1`
done


# add lines to PopulationFactory.cpp

FACTORY_OUT=${FACTORY_SRC%"_template"}
echo "updating "${POPULATIONS}${FACTORY_OUT}

sed -e "s@// CONFIGURE POPS: DO NOT DELETE THIS COMMENT LINE@${FACTORY_STRING}@" \
    -e "s@// CONFIGURE INCLUDE: DO NOT DELETE THIS COMMENT LINE@${INCLUDE_STRING}@" \
    ${POPULATIONS}${FACTORY_SRC} > ${POPULATIONS}${FACTORY_OUT}


# now create svn_revision.h

REV=`svnversion ..`

OUT=${APP}"AGENT_CLASS_SUMMARY.txt"
echo "### POPULATIONS SUMMARY ###" > ${OUT}
echo "${SUMMARY_STRING}" >> ${OUT}

echo "#ifndef __SVN_REVISION_H__"                  > ${REVISION_H}
echo "#define __SVN_REVISION_H__"                 >> ${REVISION_H}
echo "// this file is generated by configure.sh"  >> ${REVISION_H}
echo "static const char REVISION[] = \"${REV}\";" >> ${REVISION_H}
echo "#endif"                                     >> ${REVISION_H}

