// Copyright (c) Lawrence Livermore National Security, LLC and other VisIt
// Project developers.  See the top-level LICENSE file for dates and other
// details.  No copyright assignment is required to contribute to VisIt.

// ****************************************************************************
//  File: avtPiePlot.h
// ****************************************************************************

#ifndef AVT_Pie_PLOT_H
#define AVT_Pie_PLOT_H


#include <avtLegend.h>
#include <avtPlot.h>


#include <PieAttributes.h>
#include <avtPieMapper.h>
#include "GlyphManager.h"
#include "GlyphGeometry.h"

class     avtPieFilter;
class     avtPieMapper;

class     avtLevelsLegend;
class     avtLookupTable;


// ****************************************************************************
//  Class:  avtPiePlot
//
//  Purpose:
//      A concrete type of avtPlot, this is the Pie plot.
//
//  Programmer: jody -- generated by xml2avt
//  Creation:   Wed Oct 6 11:02:10 PDT 2021
//
// ****************************************************************************


class avtPiePlot : public avtSurfaceDataPlot
{
  public:
                                avtPiePlot();
    virtual                    ~avtPiePlot();

    virtual const char         *GetName(void) { return "PiePlot"; }

    static avtPlot             *Create();

    virtual void                SetAtts(const AttributeGroup*);

  protected:
    PieAttributes              atts;

    avtPieMapper               *pPieMapper;
    avtPieFilter               *pPieFilter;
    GlyphManager               *m_pGM;
    avtLevelsLegend            *levelsLegend;
    avtLegend_p                 levLegendRefPtr;
    avtLookupTable             *avtLUT;
    int                         iNumValues;
    colvec                      m_vCurColors;

    virtual avtMapperBase      *GetMapper(void);

    // these three must beimplemented (abstract functions in the superclass)
    virtual avtDataObject_p     ApplyOperators(avtDataObject_p);
    virtual avtDataObject_p     ApplyRenderingTransformation(avtDataObject_p);
    virtual void                CustomizeBehavior(void);
    virtual void                CustomizeMapper(avtDataObjectInformation &);
    void                        SetLegendColors(PieAttributes *pNewAtts);

    virtual avtLegend_p         GetLegend(void) { return levLegendRefPtr; }

};


#endif
