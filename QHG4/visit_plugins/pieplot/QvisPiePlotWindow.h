// Copyright (c) Lawrence Livermore National Security, LLC and other VisIt
// Project developers.  See the top-level LICENSE file for dates and other
// details.  No copyright assignment is required to contribute to VisIt.

// ****************************************************************************
//  File: QvisPostableWindow.h
// ****************************************************************************

#ifndef QVISPIEPLOTWINDOW_H
#define QVISPIEPLOTWINDOW_H

#include <QvisPostableWindowObserver.h>
#include <AttributeSubject.h>

class PieAttributes;
class QLabel;
class QCheckBox;
class QLineEdit;
class QSpinBox;
class QButtonGroup;
class QvisColorTableButton;
class QvisOpacitySlider;
class QvisColorButton;
class QvisLineWidthWidget;
class QvisVariableButton;
class QvisColorManagerWidget;

// ****************************************************************************
// Class: QvisPiePlotWindow
//
// Purpose:
//    Defines QvisPiePlotWindow class.
//
// Notes:      Autogenerated by xml2window.
//
// Programmer: xml2window
// Creation:   omitted
//
// Modifications:
//
// ****************************************************************************

class QvisPiePlotWindow : public QvisPostableWindowObserver
{
    Q_OBJECT
  public:
    QvisPiePlotWindow(const int type,
                         PieAttributes *subj,
                         const QString &caption = QString(),
                         const QString &shortName = QString(),
                         QvisNotepadArea *notepad = 0);
    virtual ~QvisPiePlotWindow();
    virtual void CreateWindowContents();
  public slots:
    virtual void apply();
    virtual void makeDefault();
    virtual void reset();
  protected:
    void UpdateWindow(bool doAll);
    void GetCurrentValues(int which_widget);
    void Apply(bool ignore = false);
    bool UpdateMultipleAreaNames();

    QString LevelString(int i);

  private slots:
    void iGlyphStyleChanged(int val);
    void iPieSectorsProcessText();
    void fPieRadiusProcessText();
    void fPieBorderProcessText();
    void fBarXScaleProcessText();
    void fBarYScaleProcessText();
    void fBarBorderProcessText();
    void fBoxXScaleProcessText();
    void fBoxYScaleProcessText();
    void fBoxBorderProcessText();
    void multipleColorChanged(const QColor &color, int index);
  private:
    int plotType;
    QWidget      *iGlyphStyle;
    QButtonGroup *iGlyphStyleButtonGroup;
    QLineEdit *iPieSectors;
    QLineEdit *fPieRadius;
    QLineEdit *fPieBorder;
    QLineEdit *fBarXScale;
    QLineEdit *fBarYScale;
    QLineEdit *fBarBorder;
    QLineEdit *fBoxXScale;
    QLineEdit *fBoxYScale;
    QLineEdit *fBoxBorder;
    //writeHeaderData unknown for att (variable multiColor)
    QLabel *iGlyphStyleLabel;
    QLabel *iPieSectorsLabel;
    QLabel *fPieRadiusLabel;
    QLabel *fPieBorderLabel;
    QLabel *fBarXScaleLabel;
    QLabel *fBarYScaleLabel;
    QLabel *fBarBorderLabel;
    QLabel *fBoxXScaleLabel;
    QLabel *fBoxYScaleLabel;
    QLabel *fBoxBorderLabel;
    QLabel *multiColorLabel;
    QvisColorManagerWidget *multipleColors;

    PieAttributes *atts;
};



#endif
